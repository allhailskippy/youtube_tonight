/**
 * @ngdoc directive
 * @name VideoShow
 * @module VideoApp
 *
 * @description
 * This directive displays the video
 *
 * ### Usage
 * <video-show video="video"></video-show>
 */
(function() {
'use strict';

var controller = function(
  $scope,
  VideoApp, Video
) {
  /**
   * Setup
   */
  $scope.dispatcher = VideoApp.getDispatcher();
  $scope.channel = VideoApp.getChannel('video_player');
  $scope.muted = true;
  $scope.playerId = 'preview';
  $scope.senderId = 'video-' + $scope.video.id + '-' + Math.floor(Math.random() * 1000000);
  $scope.playerReady = false;

  /**
   * Scope Methods
   */
  $scope.startPreview = function() {
    $scope.dispatcher.trigger('video_player.load', {
      video: $scope.video,
      player_id: $scope.playerId,
      sender_id: $scope.senderId
    });
  };

  $scope.stopPreview = function() {
    if($scope.playerReady) {
      $scope.dispatcher.trigger('video_player.stop', {
        video: $scope.video,
        player_id: $scope.playerId,
        sender_id: $scope.senderId
      });
    }
  };

  // Mute Preview
  $scope.mute = function() {
    $scope.toggleMute(true);
  };

  // Unmute Preview
  $scope.unMute = function() {
    $scope.toggleMute(false);
  };

  $scope.toggleMute = function(mute) {
    if($scope.playerReady) {
      var trigger = 'video_player.' + (mute ? "mute" : "unmute");
      $scope.dispatcher.trigger(trigger, {
        video: $scope.video,
        player_id: $scope.playerId,
        sender_id: $scope.senderId
      }, function() {
        //Success
        $scope.muted = mute;
        $scope.$applyAsync();
      });
    }
  };

  /**
   * Event Handlers
   */
  $scope.channel.bind('not_ready', function(message) {
    if(message.sender_id == $scope.senderId) {
      $scope.showVideo = false;
      $scope.playerReady = false;
      $scope.muted = true;
    }
  });

  $scope.channel.bind('state_change', function(message) {
    $scope.showVideo = (message.sender_id == $scope.senderId);

    if(message.sender_id == $scope.senderId) {
      // Show the video player
      if(message.state == YT.PlayerState.PLAYING) {
        $scope.playerReady = true;
      }

      // Only stop showing the video if we've already started playing one
      if($scope.playerReady && message.state <= YT.PlayerState.ENDED) {
        $scope.showVideo = false;
        $scope.playerReady = false;
        $scope.muted = true;
      }

      // Update any affected data
      $scope.$applyAsync();
    }
  });
};

controller.$inject = [
  '$scope',
  'VideoApp', 'Video'
];

var VideoShow = function() {
  return {
    restrict: 'E',
    scope: {
      video: '='
    },
    controller: controller,
    templateUrl: '<%= asset_path("apps/videos/templates/video_show.html") %>'
  };
};

angular.module('VideoApp')
       .directive('videoShow', VideoShow);
}());

