/**
 * @ngdoc directive
 * @name VideoShow
 * @module YTBroadcastApp
 *
 * @description
 * This directive displays the video
 *
 * ### Usage
 * <video-show video="video"></video-show>
 */
(function() {
'use strict';

var controller = function(
  $scope, $routeParams,
  ConnectionHelper, Video
) {
  /**
   * Setup
   */
  $scope.playerId = ConnectionHelper.getPlayerId('preview-' + $scope.video.parent_id);
  $scope.consumer = ConnectionHelper.newConsumer('VideoPlayerChannel', { player_id: $scope.playerId });
  $scope.senderId = $scope.senderId || 'video-' + $scope.video.id + '-' + Math.floor(Math.random() * 1000000);
  $scope.playing = false;
  $scope.previewRequested = false;
  $scope.sliding = false;

  /**
   * Scope Methods
   */
  $scope.broadcastReady = function() {
    return ConnectionHelper.broadcastReady($scope.broadcastId);
  };

  $scope.play = function() {
    if(!$scope.previewRequested) {
      $scope.previewRequested = true;
      $scope.consumer.send({
        video: $scope.video,
        player_id: $scope.playerId,
        sender_id: $scope.senderId,
        broadcast_id: $scope.broadcastId
      }, 'play');
    }
  };

  $scope.stop = function() {
    $scope.consumer.send({
      player_id: $scope.playerId,
      sender_id: $scope.senderId,
      broadcast_id: $scope.broadcastId
    }, 'stop');
  };

  $scope.startSlide = function(t) {
    $scope.sliding = true;
  };

  $scope.endSlide = function(t) {
    $scope.consumer.send({
      video: $scope.video,
      player_id: $scope.playerId,
      sender_id: $scope.senderId,
      broadcast_id: $scope.broadcastId,
      time: t
    }, 'set_time');
  };

  $scope.isCurrentlyPlaying = function() {
    if($scope.state && $scope.state.video) {
      return $scope.state.video.id == $scope.video.id;
    } else {
      return false;
    }
  }

  /**
   * Event Handlers
   */
  $scope.consumer.subscribe(function(response) {
    var message = response.message;
    switch(response.action) {
      case 'playing':
        if(message.player_id == $scope.playerId) {
          $scope.previewRequested = false;
          if(message.sender_id == $scope.senderId) {
            $scope.playing = true;
            $scope.$applyAsync();
          } else {
            $scope.playing = false;
            $scope.$applyAsync();
          }
        }
        break;
      case 'stopped':
        if(message.sender_id == $scope.senderId) {
          $scope.previewRequested = false;
          $scope.playing = false;
          $scope.$applyAsync();
        }
        break;
    }
  });
};

controller.$inject = [
  '$scope', '$routeParams',
  'ConnectionHelper', 'Video'
];

var VideoShow = function() {
  return {
    restrict: 'E',
    scope: {
      video: '=?',
      senderId: '=?',
      state: '=',
      allowBroadcast: '=',
      playVideo: '&',
      stopVideo: '&',
      broadcastId: '@'
    },
    controller: controller,
    templateUrl: '<%= asset_path("apps/videos/templates/video_show.html") %>'
  };
};

angular.module('YTBroadcastApp')
       .directive('videoShow', VideoShow);
}());
