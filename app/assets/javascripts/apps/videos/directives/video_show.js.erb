/**
 * @ngdoc directive
 * @name VideoShow
 * @module VideoApp
 *
 * @description
 * This directive displays the video
 *
 * ### Usage
 * <video-show video="video"></video-show>
 */
(function() {
'use strict';

var controller = function(
  $scope,
  Video
) {
  /**
   * Setup
   */
  $scope.currentVideo = null;
  $scope.dispatcher = new WebSocketRails('localhost:3000/websocket');
  $scope.channel = $scope.dispatcher.subscribe('video_player');
  $scope.muted = true;

  /**
   * Scope Methods
   */
  $scope.startPreview = function(video) {
    $scope.currentVideo = video;
  };

  $scope.stopPreview = function(video) {
    $scope.currentVideo = null;
    $scope.muted = true;
  };

  // Mute Preview
  $scope.mute = function() {
    $scope.dispatcher.trigger('video_player.mute', {
      video_id: $scope.currentVideo.id,
      player_id: 'preview-' + $scope.currentVideo.id
    }, function() {
      //Success
      $scope.muted = true;
      $scope.$applyAsync();
    });
  };

  // Unmute Preview
  $scope.unMute = function() {
    $scope.dispatcher.trigger('video_player.unmute', {
      video_id: $scope.currentVideo.id,
      player_id: 'preview-' + $scope.currentVideo.id
    }, function() {
      //Success
      $scope.muted = false;
      $scope.$applyAsync();
    });
  };
};

controller.$inject = [
  '$scope',
  'Video'
];

var VideoShow = function() {
  return {
    restrict: 'E',
    scope: {
      video: '='
    },
    controller: controller,
    templateUrl: '<%= asset_path("apps/videos/templates/video_show.html") %>'
  };
};

angular.module('VideoApp')
       .directive('videoShow', VideoShow);
}());

