/**
 * @ngdoc directive
 * @name VideoForm
 * @module VideoApp
 *
 * @description
 * This directive displays the add new video form
 *
 * ### Usage
 * <new-video></new-video>
 */
(function() {
'use strict';

var controller = function(
  $scope, $routeParams,
  Video, Notice, YoutubeParser
) {
  /**
   * Setup
   */
  $scope.show_id = $routeParams.show_id;
  $scope.currentVideo = Video.build({show_id: $scope.show_id});

  /**
   * Watched variables
   */
  $scope.$watch('currentVideo.link', function(newVal, oldVal) {
    if(newVal && newVal != oldVal || newVal == '') {
      // Clear out any existing thumbnail
      $scope.currentVideo.api_thumbnail_medium_url = Video.defaultThumbnail;
    }

    if(newVal && newVal != oldVal) {
      // Lookup youtube video
      YoutubeParser.query(newVal).then(function(response) {
        var yt = YoutubeParser.build(response.data);

        // Store the data on the current video object
        $scope.currentVideo.setFromYoutubeParser(yt);

      }).catch(Notice.handleErrors);
    }
  });

  /**
   * Scope Methods
   */
  $scope.save = function() {
    $scope.currentVideo.save().then(function() {
      Notice.setSuccesses('Successfully Added Video');
      $scope.currentVideo = Video.build({ show_id: $scope.show_id});

      // This is called on the parent controller.
      // Is defined in the scope section below
      $scope.queryNewVideos();
    }).catch(Notice.handleErrors);
  };
};

controller.$inject = [
  '$scope', '$routeParams',
  'Video', 'Notice', 'YoutubeParser'
];

var VideoForm = function() {
  return {
    restrict: 'E',
    scope: {
      queryNewVideos: '&'
    },
    controller: controller,
    templateUrl: '<%= asset_path("apps/videos/templates/video_form.html") %>'
  };
};

angular.module('VideoApp')
       .directive('videoForm', VideoForm);
}());

