/**
 * @ngdoc controller
 * @name IndexCtrl
 *
 * @description Logic for index stuffs
 */
(function() {
  "use strict";

var IndexCtrl = function(
  $scope, $location, $window,
  ShowApp, Show, Notice
  ) {

  /**
   * Setup
   */
  $scope.retrieving = false;
  $scope.shows = [];

  /**
   * Watch variables
   */

  /**
   * Scope methods
   */
  // Grabs all of the shows
  $scope.addNew = function() {
    Notice.reset();

    // Clear out any existing show first
    Show.resetCurrentShow();

    // Show 'new' form
    $location.path('/new');
  };

  // Edit a show
  $scope.edit = function(show) {
    Notice.reset();

    // Set the show to work on
    Show.setCurrentShow(show);

    // Show the 'edit' form
    $location.path('/' + show.id + '/edit');
  };

  // Get all shows
  $scope.fetchShows = function() {
    if(!$scope.retreiving) {
      $scope.retrieving = true;
      $scope.shows = []; 
      $scope.queryShows();
    }
  };

  // Looks up facebook campaigns based on filter data
  $scope.queryShows = function() {
    // Skip if we're currently looking up shows
    if($scope.querying) { return true; }

    $scope.querying = true;

    var params = {};

    // Lookup campaigns based on params
    Show.query(params).then(function(response) {
      angular.forEach(response.data, function(show) {
        $scope.shows.push(Show.build(show));
      });
      $scope.retrieving = false;
      $scope.querying = false;
    });
  };

  // Lookup initial list of shows
  $scope.fetchShows();

  // Redirect to the video list for this show
  $scope.videos = function(show) {
    $window.location.href = '/videos#shows/' + show.id;
  };
};

IndexCtrl.$inject = [
  '$scope', '$location', '$window',
  'ShowApp', 'Show', 'Notice'
];

angular.module("ShowApp")
       .controller('IndexCtrl', IndexCtrl);
}());
