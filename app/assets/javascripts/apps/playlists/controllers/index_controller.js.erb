/**
 * @ngdoc controller
 * @name IndexCtrl
 *
 * @description Logic for index stuffs
 */
(function() {
  "use strict";

var IndexCtrl = function(
  $scope, $window, $http, $routeParams,
  PlaylistApp, Playlist, Notice, User, CurrentUser
  ) {

  /**
   * Setup
   */
  $scope.user_id = $routeParams.user_id;

  // User the current user if no user id is passed in
  if($scope.user_id) {
    User.find($scope.user_id).then(function(response) {
      $scope.user = User.build(response.data);
      $scope.reloadCallback();
    });
  } else {
    CurrentUser.find().then(function(results) {
      $scope.user = CurrentUser.build(results.data);
      $scope.user_id = $scope.user.id;
      $scope.reloadCallback();
    });
  }

  $scope.importingVideos = {};
  $scope.users_url = '/users#/index';

  /**
   * Watch variables
   */

  /**
   * Scope methods
   */
  // Redirect to the video list for this playlist
  $scope.goToPlaylistItems = function(playlist) {
    $window.location.href = '/videos#/playlists/' + playlist.id;
  };

  // Table pagination setup
  $scope.init = {
    'count': 10,
    'page': 1,
    'filterBase': 1
  };

  $scope.filterBy = {
    'title': '',
  }

  $scope.theme = {
    listItemsPerPage: [5, 10, 20, 50],
    loadOnInit: true
  };

  $scope.getResource = function (params, paramsObj) {
    if($scope.user_id) {
      params = {
        per_page: paramsObj.count,
        page: paramsObj.page,
        'q[api_title_cont]': paramsObj.filters.title,
        'q[user_id_eq]': $scope.user_id
      };

      var urlApi = 'playlists.json?' + $.param(params);
      return $http.get(urlApi).then(function (response) {
        $scope.importing = false;
        var playlists = jQuery.map(response.data.data, function(playlist) {
          return Playlist.build(playlist);
        });
        return {
          'rows': playlists,
          'header': [],
          'pagination': {
            'count': response.data.per_page,
            'page': response.data.page,
            'pages': response.data.total_pages,
            'size': response.data.total
          },
        }
      }).catch(function() {
        Notice.handleErrors;
        $scope.importing = false;
      });
    }
  };

  $scope.reimportPlaylists = function() {
    if($scope.importing) {
      return false;
    }
    var list = Playlist.build({ user_id: $scope.user_id })
    $scope.importing = true;
    list.importPlaylists().then(function(response) {
      Notice.setSuccesses(['Successfully Re-imported Playlists']);
      $scope.reloadCallback();
    }).catch(function() {
      Notice.handleErrors;
    });
  };

  $scope.reloadCallback = function() {};

  $scope.reload = function() {
    $scope.reloadCallback();
  };

  $scope.reimportVideos = function(playlist) {
    if($scope.importingVideos[playlist.id]) {
      return false;
    }

    var list = Playlist.build({ id: playlist.id })
    $scope.importingVideos[playlist.id] = true;
    list.importPlaylists().then(function(response) {
      Notice.setSuccesses(['Successfully Re-imported Videos']);
      $scope.importingVideos[playlist.id] = false;
      $scope.reloadCallback();
    }).catch(function() {
      $scope.importingVideos[playlist.id] = false;
      Notice.handleErrors;
    });
  };
};

IndexCtrl.$inject = [
  '$scope', '$window', '$http', '$routeParams',
  'PlaylistApp', 'Playlist', 'Notice', 'User', 'CurrentUser'
];

angular.module("PlaylistApp")
       .controller('IndexCtrl', IndexCtrl);
}());
